@article{Sulc2020,
abstract = {Integrating applications or codes into MuPIF API Model enables easy integration of such APIs into any workflow representing complex multiphysical simulation. This concept of MuPIF also enables automatic code generation of the computational code for given workflow structure. This article describes a'workflow generator' tool for the code generation together with'workflow editor' graphical interface for interactive definition of the workflow structure and the inner data dependencies. The usage is explained on a thermo-mechanical simulation.},
author = {{\v{S}}ulc, Stanislav and {\v{S}}milauer, V{\'{i}}t and Patz{\'{a}}k, Bořek},
doi = {10.14311/APP.2020.26.0107},
file = {:D$\backslash$:/Downloads/6397-18446-1-PB.pdf:pdf},
issn = {23365382},
journal = {Acta Polytechnica CTU Proceedings},
keywords = {Code generator,MuPIF,Workflow editor},
pages = {107--111},
title = {{Mupif workflow editor and automatic code generator}},
volume = {26},
year = {2020}
}
@article{Crotty2016,
abstract = {Enabling interactive visualization over new datasets at "human speed" is key to democratizing data science and maximizing human productivity. In this work, we first argue why existing analytics infrastructures do not support interactive data exploration and then outline the challenges and opportunities of building a system specifically designed for interactive data exploration. Finally, we present an Interactive Data Exploration Accelerator (IDEA), a new type of system for interactive data exploration that is specifically designed to integrate with existing data management landscapes and allow users to explore their data instantly without expensive data preparation costs.},
author = {Crotty, Andrew and Galakatos, Alex and Zgraggen, Emanuel and Binnig, Carsten and Kraska, Tim},
doi = {10.1145/2939502.2939513},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Crotty et al. - 2016 - The case for Interactive Data Exploration Accelerators (IDEAs).pdf:pdf},
isbn = {9781450342070},
journal = {HILDA 2016 - Proceedings of the Workshop on Human-In-the-Loop Data Analytics},
title = {{The case for Interactive Data Exploration Accelerators (IDEAs)}},
year = {2016}
}
@article{Kotliar2019,
abstract = {Background: Massive growth in the amount of research data and computational analysis has led to increased use of pipeline managers in biomedical computational research. However, each of the {\textgreater}100 such managers uses its own way to describe pipelines, leading to difficulty porting workflows to different environments and therefore poor reproducibility of computational studies. For this reason, the Common Workflow Language (CWL) was recently introduced as a specification for platform-independent workflow description, and work began to transition existing pipelines and workflow managers to CWL. Findings: Herein, we present CWL-Airflow, a package that adds support for CWL to the Apache Airflow pipeline manager. CWL-Airflow uses CWL version 1.0 specification and can run workflows on stand-alone MacOS/Linux servers, on clusters, or on a variety of cloud platforms. A sample CWL pipeline for processing of chromatin immunoprecipitation sequencing data is provided. Conclusions: CWL-Airflow will provide users with the features of a fully fledged pipeline manager and the ability to execute CWL workflows anywhere Airflow can run - from a laptop to a cluster or cloud environment. CWL-Airflow is available under Apache License, version 2.0 (Apache-2.0), and can be downloaded from https://barski-lab.github.io/cwl-airflow, https://scicrunch.org/resolver/RRID:SCR{\_}017196.},
author = {Kotliar, Michael and Kartashov, Andrey V. and Barski, Artem},
doi = {10.1093/gigascience/giz084},
file = {:D$\backslash$:/Documents/Bath/Dissertation/References/giz084.pdf:pdf},
issn = {2047217X},
journal = {GigaScience},
keywords = {Airflow,Common Workflow Language,pipeline manager,reproducible data analysis,workflow manager,workflow portability},
number = {7},
pages = {1--8},
pmid = {31321430},
publisher = {Oxford University Press},
title = {{CWL-Airflow: A lightweight pipeline manager supporting Common Workflow Language}},
volume = {8},
year = {2019}
}
@inproceedings{Kraska2018,
abstract = {In order to democratize data science, we need to fundamentally rethink the current analytics stack, from the user interface to the “guts.“ Most importantly, enabling a broader range of users to unfold the potential of (their) data requires a change in the interface and the “protection“ we offer them. On the one hand, visual interfaces for data science have to be intuitive, easy, and interactive to reach users without a strong background in computer science or statistics. On the other hand, we need to protect users from making false discoveries. Furthermore, it requires that technically involved (and often boring) tasks have to be automatically done by the system so that the user can focus on contributing their domain expertise to the problem. In this paper, we present Northstar, the Interactive Data Science System, which we have developed over the last 4 years to explore designs that make advanced analytics and model building more accessible.},
author = {Kraska, Tim},
booktitle = {Proceedings of the VLDB Endowment},
doi = {10.14778/3229863.3240493},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Kraska - 2018 - Northstar An interactive data science system.pdf:pdf},
issn = {21508097},
number = {12},
pages = {2150--2164},
publisher = {Association for Computing Machinery},
title = {{Northstar: An interactive data science system}},
volume = {11},
year = {2018}
}
@book{Goos1980,
author = {Goos, G. and Hartmanis, J.},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-662-19161-3},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Goos, Hartmanis - 1980 - Lecture notes in computer science.pdf:pdf},
isbn = {3540221514},
issn = {16113349},
pages = {i},
title = {{Lecture notes in computer science}},
volume = {106},
year = {1980}
}
@article{Montagnat2009,
abstract = {Different scientific workflow languages have been developed to help programmers in designing complex data analysis procedures. However, little effort has been invested in comparing and finding a common root for existing approaches. This work is motivated by the search for a scientific workflow language which coherently integrates different aspects of distributed computing. The language proposed is data-driven for easing the expression of parallel flows. It leverages array programming principles to ease data-intensive applications design. It provides a rich set of control structures and iteration strategies while avoiding unnecessary programming constructs. It allows programmers to express a wide set of applications in a compact framework. Copyright 2009 ACM.},
author = {Montagnat, Johan and Isnard, Benjamin and Glatard, Tristan and Maheshwari, Ketan and Fornarino, Mireille Blay},
doi = {10.1145/1645164.1645171},
file = {:D$\backslash$:/Downloads/1645164.1645171.pdf:pdf},
isbn = {9781605587172},
journal = {Proceedings of the 4th Workshop on Workflows in Support of Large-Scale Science, WORKS '09, in Conjunction with SC 2009},
keywords = {D.3.2 [Programming languages]: language classicati,Design,Languages},
title = {{A data-driven workflow language for grids based on array programming principles}},
year = {2009}
}
@misc{Preimesberger,
author = {Preimesberger, Chris},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Unknown - Unknown - How Companies Utilize No-Code, Low-Code Development EBSCOhost.pdf:pdf},
title = {{How Companies Utilize No-Code, Low-Code Development: EBSCOhost}},
url = {https://web-a-ebscohost-com.ezproxy1.bath.ac.uk/ehost/detail/detail?vid=1{\&}sid=73087efc-7a8a-4a9e-bc4f-a884e57ede32{\%}40sdc-v-sessmgr02{\&}bdata=JnNpdGU9ZWhvc3QtbGl2ZQ{\%}3D{\%}3D},
urldate = {2020-04-17}
}
@book{Stopka2018,
abstract = {Driven by megatrends such as globalization, urbanization, climate change and technological progress, the mobility sector is undergoing a strong process of change which is characterized in particular by the intermodal cross-linking of various public and private mobility services. The aim is to make transport as a whole more environmentally friendly. To meet this challenge “Mobility as a Service” (MaaS) concepts are introduced in the market which offer individualized one-stop access to several bundled travel services based on customer's needs. The supply of so-called mobility packages requires very close cooperation between the various players on the transport market who use electronic platforms for this purpose. First of all, the paper gives an overview about the research activities and the implementation status of MaaS concepts in different countries. In the following chapters, the general approach and methods for the development of mobility packages are discussed and first results of related research projects in Germany are presented.},
author = {Stopka, Ulrike and Pessier, Ren{\'{e}} and G{\"{u}}nther, Christian},
booktitle = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
doi = {10.1007/978-3-319-91244-8_34},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Stopka, Pessier, G{\"{u}}nther - 2018 - Mobility as a service (MaaS) based on intermodal electronic platforms in public transport.pdf:pdf},
isbn = {9783319912431},
issn = {16113349},
keywords = {Conjoint analysis,Intermodal transport,Mobility as a Service,Mobility packages,Mobility platform,Urban mobility,User requirements,Van Westendorp analysis},
pages = {419--439},
title = {{Mobility as a service (MaaS) based on intermodal electronic platforms in public transport}},
volume = {10902 LNCS},
year = {2018}
}
@article{Milicchio2016,
abstract = {Background: High-throughput or next-generation sequencing (NGS) technologies have become an established and affordable experimental framework in biological and medical sciences for all basic and translational research. Processing and analyzing NGS data is challenging. NGS data are big, heterogeneous, sparse, and error prone. Although a plethora of tools for NGS data analysis has emerged in the past decade, (i) software development is still lagging behind data generation capabilities, and (ii) there is a 'cultural' gap between the end user and the developer. Text: Generic software template libraries specifically developed for NGS can help in dealing with the former problem, whilst coupling template libraries with visual programming may help with the latter. Here we scrutinize the state-of-the-art low-level software libraries implemented specifically for NGS and graphical tools for NGS analytics. An ideal developing environment for NGS should be modular (with a native library interface), scalable in computational methods (i.e. serial, multithread, distributed), transparent (platform-independent), interoperable (with external software interface), and usable (via an intuitive graphical user interface). These characteristics should facilitate both the run of standardized NGS pipelines and the development of new workflows based on technological advancements or users' needs. We discuss in detail the potential of a computational framework blending generic template programming and visual programming that addresses all of the current limitations. Conclusion: In the long term, a proper, well-developed (although not necessarily unique) software framework will bridge the current gap between data generation and hypothesis testing. This will eventually facilitate the development of novel diagnostic tools embedded in routine healthcare.},
author = {Milicchio, Franco and Rose, Rebecca and Bian, Jiang and Min, Jae and Prosperi, Mattia},
doi = {10.1186/s13040-016-0095-3},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Milicchio et al. - 2016 - Visual programming for next-generation sequencing data analytics.pdf:pdf},
issn = {17560381},
journal = {BioData Mining},
keywords = {Big data,Generic programming,Graphical user interface,High-throughput sequencing,Next-generation sequencing,Software suite,Template library,Visual programming},
number = {1},
pages = {1--18},
publisher = {BioData Mining},
title = {{Visual programming for next-generation sequencing data analytics}},
url = {http://dx.doi.org/10.1186/s13040-016-0095-3},
volume = {9},
year = {2016}
}
@article{Waszkowski2019,
abstract = {The low-code platform enables quick generation and delivery of business applications with minimum effort to write in a coding language and requires the least possible effort for the installation and configuration of environments, and training and implementation. With a rapidly growing number of companies, the use of low-code solutions can be a significant step forward in creating essential business applications. This paper describes the use of the Aurea BPM low-code platform for automating business processes in manufacturing.},
author = {Waszkowski, Robert},
doi = {10.1016/j.ifacol.2019.10.060},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Waszkowski - 2019 - Low-code platform for automating business processes in manufacturing.pdf:pdf},
issn = {24058963},
journal = {IFAC-PapersOnLine},
keywords = {Aurea BPM,Low-code platform,business processes,manufacturing,process automation},
number = {10},
pages = {376--381},
publisher = {Elsevier Ltd},
title = {{Low-code platform for automating business processes in manufacturing}},
url = {https://doi.org/10.1016/j.ifacol.2019.10.060},
volume = {52},
year = {2019}
}
@article{Gesing2013,
abstract = {This paper identifies the high value to researchers in many disciplines of having web-based graphical editors for scientific workflows and draws attention to two technological transitions: good quality editors can now run in a browser and workflow enactment systems are emerging that manage multiple workflow languages and support multi-lingual workflows. We contend that this provides a unique opportunity to introduce multi-lingual graphical workflow editors which in turn would yield substantial benefits: workflow users would find it easier to share and combine methods encoded in multiple workflow languages, the common framework would stimulate conceptual convergence and increased workflow component sharing, and the many workflow communities could share a substantial part of the effort of delivering good quality graphical workflow editors in browsers. The paper examines whether such a common framework is feasible and presents an initial design for a web-based editor, tested with a preliminary prototype. It is not a fait accompli but rather an urgent rallying cry to explore collaboratively a generic web-based framework before investing in many divergent individual implementations.},
author = {Gesing, Sandra and Atkinson, Malcolm and Klampanos, Iraklis and Galea, Michelle and Berthold, Michael R. and Barbera, Roberto and Scardaci, Diego and Terstyanszky, Gabor and Kiss, Tamas and Kacsuk, Peter},
doi = {10.1145/2534248.2534260},
file = {:D$\backslash$:/Downloads/2534248.2534260.pdf:pdf},
isbn = {9781450325028},
journal = {Proceedings of WORKS 2013: 8th Workshop on Workflows in Support of Large-Scale Science - Held in conjunction with SC 2013: The International Conference for High Performance Computing, Networking, Storage and Analysis},
keywords = {H.5.3 group and organization interfaces|informatio,Web-based work flow editors,Workflow composition,Workflow interoperability,Workflow languages and concepts},
pages = {112--123},
title = {{The demand for consistent web-based workflow editors}},
year = {2013}
}
@book{Bernhaupt2017,
author = {Bernhaupt, Regina and Dalvi, Girish and Neill, Jacki O and Winckler, Marco and Hutchison, David},
doi = {10.1007/978-3-319-67687-6},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Bernhaupt et al. - 2017 - INTERACT 2017 Part III.pdf:pdf},
isbn = {9783319676869},
issn = {03029743},
keywords = {parkinson,pd,s disease},
pages = {395--403},
title = {{INTERACT 2017 Part III}},
volume = {1},
year = {2017}
}
@article{Points2020,
author = {Anderson, Holly},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Points - 2020 - are critical to optimize digital.pdf:pdf},
number = {February},
pages = {31--33},
title = {are critical to optimize digital},
year = {2020}
}
@book{TerHofstede2010,
abstract = {Topics covered include: .The fundamentals of business process modeling, including workflow patterns; .An in-depth treatment of process flexibility, including approaches to dealing with on-the-fly changes, unexpected exceptions, and constraint-based processes; .Technological aspects of a modern BPM environment, including its architecture, process design environment, process engine, resource handler and other support services; .A comparative insight into current approaches to business process modeling and execution such as BPMN, EPCs, BPEL, jBPM, OpenWFE, and Enhydra Shark; .Process mining, verification, integration and configuration; and .Case studies in health care and screen business. This book provides a comprehensive treatment of the field of Business Process Management (BPM) with a focus on Business Process Automation. It achieves this by covering a wide range of topics, both introductory and advanced, illustrated through and grounded in the YAWL (Yet Another Workflow Language) language and corresponding open-source support environment. In doing so it provides the reader with a deep, timeless, and vendor-independent understanding of the essential ingredients of business process automation. The BPM field is in a continual state of flux and is subject to both the ongoing proposal of new standards and the introduction of new tools and technology. Its fundamentals however are relatively stable and this book aims to equip the reader with both a thorough understanding of them and the ability to apply them to better understand, assess and utilize new developments in the BPM field. As a consequence of its topic-based format and the inclusion of a broad range of exercises, the book is eminently suitable for use in tertiary education, both at the undergraduate and the postgraduate level, for students of computer science and information systems. BPM researchers and practitioners will also find it a valuable resource. The book serves as a unique reference to a varied and comprehensive collection of topics that are relevant to the business process life-cycle. {\textcopyright} Springer-Verlag Berlin Heidelberg 2010.},
author = {{Ter Hofstede}, Arthur H.M. and {Van Der Aalst}, Wil M.P. and Adams, Michael and Russell, Nick},
booktitle = {Modern Business Process Automation: YAWL and its Support Environment},
doi = {10.1007/978-3-642-03121-2},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Ter Hofstede et al. - 2010 - Modern business process automation YAWL and its support environment.pdf:pdf},
isbn = {9783642031205},
pages = {1--676},
title = {{Modern business process automation: YAWL and its support environment}},
year = {2010}
}
@article{Tisi2019,
abstract = {Low-Code Development Platforms (LCDPs) are software development platforms on the Cloud, provided through a Platform-as-a-Service model, which allow users to build completely operational applications by interacting through dynamic graphical user interfaces, visual diagrams and declarative languages. Lowcomote will train a generation of experts that will upgrade the current trend of LCDP to a new paradigm, Low-Code Engineering Platform. This will be achieved by injecting in LCDPs the theoretical and technical framework defined by recent research in Model Driven Engineering, augmented with Cloud Computing and Machine Learning techniques.},
author = {Tisi, Massimo and Mottu, Jean Marie and Kolovos, Dimitrios S. and de Lara, Juan and Guerra, Esther and {Di Ruscio}, Davide and Pierantonio, Alfonso and Wimmer, Manuel},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Tisi et al. - 2019 - Lowcomote Training the next generation of experts in scalable low-code engineering platforms.pdf:pdf},
issn = {16130073},
journal = {CEUR Workshop Proceedings},
title = {{Lowcomote: Training the next generation of experts in scalable low-code engineering platforms}},
volume = {2405},
year = {2019}
}
@article{Richardson2016,
author = {Richardson, Clay and Rymer, John R},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Richardson, Rymer - 2016 - Vendor Landscape The Fractured, Fertile Terrain Of Low-Code Application Platforms.pdf:pdf},
title = {{Vendor Landscape: The Fractured, Fertile Terrain Of Low-Code Application Platforms}},
url = {Forrester Research database},
year = {2016}
}
@article{Stahl2015,
author = {Stahl, Christian},
doi = {10.1007/11538394},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Stahl - 2015 - Transforming BPEL to Petri nets Transforming BPEL to Petri Nets.pdf:pdf},
keywords = {analysis,bpel,business process modeling and,formal models in busi-,ness process management,petri nets,process verification and validation},
number = {September},
title = {{Transforming BPEL to Petri nets Transforming BPEL to Petri Nets}},
year = {2015}
}
@article{Zolotas2018a,
abstract = {In the modern business world it is increasingly often that Enterprises opt to bring their business model online, in their effort to reach out to more end users and increase their customer base. While transitioning to the new model, enterprises consider securing their data of pivotal importance. In fact, many efforts have been introduced to automate this ‘webification' process; however, they all fall short in some aspect: a) they either generate only the security infrastructure, assigning implementation to the developers, b) they embed mainstream, less powerful authorisation schemes, or c) they disregard the merits of the dominating REST architecture and adopt less suitable approaches. In this paper we present RESTsec, a Low-Code platform that supports rapid security requirements modelling for Enterprise Services, abiding by the state of the art ABAC authorisation scheme. RESTsec enables the developer to seamlessly embed the desired access control policy and generate the service, the security infrastructure and the code. Evaluation shows that our approach is valid and can help developers deliver secure by design enterprise services in a rapid and automated manner.},
author = {Zolotas, Christoforos and Chatzidimitriou, Kyriakos C. and Symeonidis, Andreas L.},
doi = {10.1080/17517575.2018.1462403},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Zolotas, Chatzidimitriou, Symeonidis - 2018 - RESTsec a low-code platform for generating secure by design enterprise services(2).pdf:pdf},
issn = {17517583},
journal = {Enterprise Information Systems},
keywords = {ABAC,RESTful services,access control,data migration,model driven engineering},
number = {8-9},
pages = {1007--1033},
publisher = {Taylor {\&} Francis},
title = {{RESTsec: a low-code platform for generating secure by design enterprise services}},
url = {https://doi.org/10.1080/17517575.2018.1462403},
volume = {12},
year = {2018}
}
@article{Zolotas2018,
abstract = {In the modern business world it is increasingly often that Enterprises opt to bring their business model online, in their effort to reach out to more end users and increase their customer base. While transitioning to the new model, enterprises consider securing their data of pivotal importance. In fact, many efforts have been introduced to automate this ‘webification' process; however, they all fall short in some aspect: a) they either generate only the security infrastructure, assigning implementation to the developers, b) they embed mainstream, less powerful authorisation schemes, or c) they disregard the merits of the dominating REST architecture and adopt less suitable approaches. In this paper we present RESTsec, a Low-Code platform that supports rapid security requirements modelling for Enterprise Services, abiding by the state of the art ABAC authorisation scheme. RESTsec enables the developer to seamlessly embed the desired access control policy and generate the service, the security infrastructure and the code. Evaluation shows that our approach is valid and can help developers deliver secure by design enterprise services in a rapid and automated manner.},
author = {Zolotas, Christoforos and Chatzidimitriou, Kyriakos C. and Symeonidis, Andreas L.},
doi = {10.1080/17517575.2018.1462403},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Zolotas, Chatzidimitriou, Symeonidis - 2018 - RESTsec a low-code platform for generating secure by design enterprise services.pdf:pdf},
issn = {17517583},
journal = {Enterprise Information Systems},
keywords = {ABAC,RESTful services,access control,data migration,model driven engineering},
number = {8-9},
pages = {1007--1033},
publisher = {Taylor {\&} Francis},
title = {{RESTsec: a low-code platform for generating secure by design enterprise services}},
url = {https://doi.org/10.1080/17517575.2018.1462403},
volume = {12},
year = {2018}
}
@article{Science2011,
author = {Science, Democratizing},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Science - 2011 - Globus Online.pdf:pdf},
pages = {1--31},
publisher = {IEEE},
title = {{Globus Online}},
url = {papers3://publication/uuid/5162918B-497A-4A25-8EDF-B50C9AFE2E47},
year = {2011}
}
@book{Knudsen2019,
author = {Knudsen, M. S. and Kaivo-oja, J. and Lauraeus, T.},
doi = {10.1007/978-3-030-21451-7},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Knudsen, Kaivo-oja, Lauraeus - 2019 - Efficient Estimation of Ontology Entities Estimaci{\'{o}}n eficiente de entidades de ontolog{\'{i}}a.pdf:pdf},
isbn = {9783030214517},
keywords = {Cont,Ontology entities distributed representations,concept embeddings,continuous vector representations,feature representation,neural networks,ontology entities distributed representations},
pages = {3--13},
title = {{Efficient Estimation of Ontology Entities [Estimaci{\'{o}}n eficiente de entidades de ontolog{\'{i}}a]}},
url = {http://dx.doi.org/10.1007/978-3-030-21451-7{\_}5},
volume = {1},
year = {2019}
}
@article{Binnig2019,
abstract = {Enabling interactive visualization over new datasets at “human speed” is key to democratizing data science and maximizing human productivity. In this work, we first argue why existing analytics infrastructures do not support interactive data exploration and outline the challenges and opportunities of building a system specifically designed for interactive data exploration. Furthermore, we present the results of building IDEA, a new type of system for interactive data exploration that is specifically designed to integrate seamlessly with existing data management landscapes and allow users to explore their data instantly without expensive data preparation costs. Finally, we discuss other important considerations for interactive data exploration systems including benchmarking, natural language interfaces, as well as interactive machine learning.},
author = {Binnig, Carsten and Basık, Fuat and Buratti, Benedetto and Cetintemel, Ugur and Chung, Yeounoh and Crotty, Andrew and Cousins, Cyrus and Ebert, Dylan and Eichmann, Philipp and Galakatos, Alex and H{\"{a}}ttasch, Benjamin and Ilkhechi, Amir and Kraska, Tim and Shang, Zeyuan and Tromba, Isabella and Usta, Arif and Utama, Prasetya and Upfal, Eli and Wang, Linnan and Weir, Nathaniel and Zeleznik, Robert and Zgraggen, Emanuel},
doi = {10.1007/978-3-030-24124-7_11},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Binnig et al. - 2019 - Towards Interactive Data Exploration.pdf:pdf},
isbn = {9783030241230},
issn = {18651356},
journal = {Lecture Notes in Business Information Processing},
pages = {177--190},
title = {{Towards Interactive Data Exploration}},
volume = {337},
year = {2019}
}
@article{Tarzey2019,
author = {Tarzey, Bob},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Tarzey - 2019 - Getting to grips with low - code and no - code software development.pdf:pdf},
pages = {17--21},
title = {{Getting to grips with low - code and no - code software development}},
year = {2019}
}
@article{VanDerAalst2005,
abstract = {Based on a rigorous analysis of existing workflow management systems and workflow languages, a new workflow language is proposed: yet another workflow language (YAWL). To identify the differences between the various languages, we have collected a fairly complete set of workflow patterns. Based on these patterns we have evaluated several workflow products and detected considerable differences in their ability to capture control flows for non-trivial workflow processes. Languages based on Petri nets perform better when it comes to state-based workflow patterns. However, some patterns (e.g. involving multiple instances, complex synchronisations or non-local withdrawals) are not easy to map onto (high-level) Petri nets. This inspired us to develop a new language by taking Petri nets as a starting point and adding mechanisms to allow for a more direct and intuitive support of the workflow patterns identified. This paper motivates the need for such a language, specifies the semantics of the language, and shows that soundness can be verified in a compositional way. Although YAWL is intended as a complete workflow language, the focus of this paper is limited to the control-flow perspective. {\textcopyright} 2004 Elsevier Ltd. All rights reserved.},
author = {{Van Der Aalst}, W. M.P. and {Ter Hofstede}, A. H.M.},
doi = {10.1016/j.is.2004.02.002},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Van Der Aalst, Ter Hofstede - 2005 - YAWL Yet another workflow language.pdf:pdf},
issn = {03064379},
journal = {Information Systems},
keywords = {Petri nets,Workflow languages,Workflow management,Workflow patterns,YAWL},
number = {4},
pages = {245--275},
title = {{YAWL: Yet another workflow language}},
volume = {30},
year = {2005}
}
@article{Dimyadi2016,
abstract = {In the AEC industry, there is a large number of standards and codes which ensure the structural stability, reliability, usability of the building under design. Accordingly, checking the conformity of the building design with these requirements is a crucial process. Nowadays this checking is performed to a large extent manually based on two-dimensional technical drawings and textual documents. Due to the low level of automation, the conventional checking procedure is laborious, cumbersome and error-prone. As Building Information Modeling (BIM) becomes more and more mature, a suitable digital information basis also becomes available to enable automating the process. The commercial solutions for code compliance checking available so far mainly follow a black-box approach where the rules that make up a certain regulation are implemented in a hard-wired fashion rendering their implementation in-transparent and non-extendable. A number of researchers have tackled this problem and have proposed various ways that allow the user to define rules, either in a standard programming language or in a dedicated language. However, AEC domain experts usually do not have the required programming skills to use these languages appropriately. To overcome this issue, we introduce the Visual Code Checking Language (VCCL), which uses a graphical notation in order to represent the rules of a code in a machine- and human-readable language. The paper presents the features and functionalities of the VCCL in detail and shows its application in a number of case studies. COPYRIGHT:},
author = {Dimyadi, J. and Solihin, W. and Preidel, Cornelius and Borrmann, Andr{\'{e}}},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Dimyadi et al. - 2016 - Towards code compliance checking on the basis of a visual programming language.pdf:pdf},
issn = {14006529},
journal = {Journal of Information Technology in Construction},
keywords = {Building Information Modeling,Code compliance checking,Visual programming language},
number = {July},
pages = {402--421},
title = {{Towards code compliance checking on the basis of a visual programming language}},
volume = {21},
year = {2016}
}
@article{Quiroz-Fabian2019,
abstract = {Parallel programming continues to be a challenging task despite the many advances in parallel architectures and their wide availability in the cloud. The need both to partition the workload among various processing elements and to specify communication between them to share code and data, and to coordinate their tasks, requires from the developer a deep understanding of the problem, the parallel architecture and the programming language used in order to develop efficient parallel applications. This problem can be reduced significantly through the use of visual programming languages to hide most aspects related to the specification of communication and processes management. This paper presents VPPE, a novel Visual Parallel Programming Environment that allows developers to program parallel applications through organising workflows of interconnected icons. VPPE is a cloud environment that supports icons for specifying: I/O operations, workflow organisation, communication, and processing. Processing computing patterns supported so far include Single Program Multiple Data, Multiple Program Multiple Data, Pipeline, and Master–Slave. The paper highlights the design of VPPE based on a context-free graph grammar, its current implementation based on Java-MPI, its use in developing various parallel applications, and its evaluation compared to Java-MPI text-based programming.},
author = {Quiroz-Fabi{\'{a}}n, Jos{\'{e}} L. and Rom{\'{a}}n-Alonso, Graciela and Castro-Garc{\'{i}}a, Miguel A. and Buenabad-Ch{\'{a}}vez, Jorge and Boukerche, Azzedine and Aguilar-Cornejo, Manuel},
doi = {10.1007/s10766-019-00639-w},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Quiroz-Fabi{\'{a}}n et al. - 2019 - VPPE A Novel Visual Parallel Programming Environment.pdf:pdf},
issn = {15737640},
journal = {International Journal of Parallel Programming},
keywords = {Cloud computing,Graph grammar,Hyperedge replacement grammar,Parallel patterns,Workflow},
number = {5-6},
pages = {1117--1151},
title = {{VPPE: A Novel Visual Parallel Programming Environment}},
volume = {47},
year = {2019}
}
@article{Clark2019,
author = {Clark, Lindsay},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Clark - 2019 - Low-code maturity boosts efficiency and helps user acceptance.pdf:pdf},
journal = {Comptuerweekly.com},
number = {November},
pages = {18--23},
title = {{Low-code maturity boosts efficiency and helps user acceptance}},
year = {2019}
}
@article{Joao2019,
abstract = {In the last few years, it has been pointed out that teaching programming is a strong strategy to develop pupils' competences in computational thinking (CT). In the Portuguese context, the curriculum changes in 2018 made programming and CT compulsory for every pupil in primary and secondary education. Nowadays, there is an information and communication technology (ICT) subject, taught by a computer science teacher in each school grade. In Portugal, to become a computer science teacher in primary and secondary education, it is compulsory to have a master's degree in computer science education. This article reports on a pedagogical activity developed with student-teachers of a Master in Teaching Informatics at the University of Lisbon. Within the activities of the master's program, we developed a cross-analysis of the core characteristics of 26 block-based and visual programming applications (apps) used to teach computational thinking and programming in school classes. In order to organize the analysis, a framework with several dimensions was developed and used by student-teachers to register the characteristics of each app. The product of this work is a comparative matrix mapping the core characteristics of each of the 26 apps that student-teachers used to select the most appropriate one for teaching programming and computational thinking according to each grade, age group and other characteristics.},
author = {Jo{\~{a}}o, Piedade and Nuno, Dorotea and F{\'{a}}bio, Sampaio Ferrentini and Ana, Pedro},
doi = {10.3390/educsci9030181},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Jo{\~{a}}o et al. - 2019 - A cross-analysis of block-based and visual programming apps with computer science student-teachers.pdf:pdf},
issn = {22277102},
journal = {Education Sciences},
keywords = {Computational thinking,Computer science education,Cross-analysis,Programming,Visual programming applications},
number = {3},
title = {{A cross-analysis of block-based and visual programming apps with computer science student-teachers}},
volume = {9},
year = {2019}
}
@techreport{Siddiqui2150,
abstract = {Data visualization is by far the most commonly used mechanism to explore and extract insights from datasets, especially by novice data scientists. And yet, current visual analytics tools are rather limited in their ability to operate on collections of visualizations-by composing , filtering, comparing, and sorting them-to find those that depict desired trends or patterns. The process of visual data exploration remains a tedious process of trial-and-error. We propose zenvisage, a visual analytics platform for effortlessly finding desired visual patterns from large datasets. We introduce zenvisage's general purpose visual exploration language, ZQL ("zee-quel") for specifying the desired visual patterns, drawing from use-cases in a variety of domains, including biology, mechanical engineering, climate science, and commerce. We formalize the expressiveness of ZQL via a visual exploration algebra-an algebra on collections of visualizations-and demonstrate that ZQL is as expressive as that algebra. zenvisage exposes an interactive front-end that supports the issuing of ZQL queries, and also supports interactions that are "short-cuts" to certain commonly used ZQL queries. To execute these queries, zenvisage uses a novel ZQL graph-based query opti-mizer that leverages a suite of optimizations tailored to the goal of processing collections of visualizations in certain pre-defined ways. Lastly, a user survey and study demonstrates that data scientists are able to effectively use zenvisage to eliminate error-prone and tedious exploration and directly identify desired visualizations.},
author = {Siddiqui, Tarique and Kim, Albert and Lee, John and Karahalios, Karrie and Parameswaran, Aditya},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Siddiqui et al. - 2150 - Effortless Data Exploration with zenvisage An Expressive and Interactive Visual Analytics System.pdf:pdf},
title = {{Effortless Data Exploration with zenvisage: An Expressive and Interactive Visual Analytics System}},
year = {2150}
}
@article{Cuvic2018,
abstract = {Understanding program execution is mandatory if a programmer is to write code, regardless of programming experience. Therefore, it is important for novice programmers to construct correct mental models of the execution of the notional machine. To this end, many program visualizations have been developed over the years. However, novice programmers often focus on learning the syntax of a programming language rather than programming itself. Dataflow visual programming languages (DFVPL) allow us to build programs by connecting blocks with arcs. In this paper we present our own DFVPL that exhibits a high level of responsiveness to user inputs and allows the user to control the execution of the program.},
author = {Cuvic, Marin Aglic},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/{\v{C}}uvi{\'{c}} - 2018 - Introducing a Dataflow visual programming language for understanding program execution.pdf:pdf},
keywords = {dataflow,dataflow visual programming,learning programming,program visualizations},
number = {1},
title = {{Introducing a Dataflow visual programming language for understanding program execution}},
volume = {2},
year = {2018}
}
@article{Preidel2017,
abstract = {Background: With the rising adoption of Building Information Modeling (BIM) in the AEC sector, computational models supersede traditional ways of information provision based on textual documents and two-dimensional drawings. The use of models enables the streamlining of workflows, and the included virtual construction increases the quality of the final product, the building. To create a comprehensive description of a planned building, information from different sources must be combined, specified and regularly updated by the project's stakeholders. The emerging models are highly structured, and instance files entail large amounts of data. However, in an unprocessed state, these models are of limited suitability for performing engineering tasks as the amount and structure does not match the domain-specific and purpose-oriented views. Methods: Selection and filtering data for the user's needs is a well-understood task in computer science, and various approaches are available. A promising approach is the usage of formal query languages. In this paper, selected common query languages are examined and assessed for processing building model information. Based on the analysis, we come to the conclusion that textual query languages are too complex to be employed by typical end users in the construction industry such as architects and engineers. Results: To overcome this issue, two Visual Programming Languages representing a new, more intuitive mechanism for data retrieval are introduced. The first one, QL4BIM, is designed for general filtering of IFC models, the second one, VCCL, has been developed for Code Compliance Checking. Both languages provide operators based on the Relational Algebra to allow handling of relations - a highly required feature of BIM QLs. Conclusions: The paper concludes with a discussion of the strengths and limitations of visual programming languages in the BIM context.},
author = {Preidel, Cornelius and Daum, Simon and Borrmann, Andr{\'{e}}},
doi = {10.1186/s40327-017-0055-0},
file = {:C$\backslash$:/Users/Robert/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Preidel, Daum, Borrmann - 2017 - Data retrieval from building information models based on visual programming.pdf:pdf},
issn = {22137459},
journal = {Visualization in Engineering},
keywords = {Building information modeling,Information retrieval,Relational algebra,Visual programming},
number = {1},
publisher = {Visualization in Engineering},
title = {{Data retrieval from building information models based on visual programming}},
volume = {5},
year = {2017}
}
